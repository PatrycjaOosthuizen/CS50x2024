sort1 uses: Bubble sort
Actually SORT 1 answer is  SELECTION SORT, I think it's a bug in cs50 check.

How do you know?:
consistently underperforms across all scenarios.

sort2 uses:
Merge sort

How do you know?:
the most efficient algorithm overall,, especially for larger datasets where its O(n log n) complexity outperforms both selection and bubble sorts.

sort3 uses: Selection sort
Actually SORT3 abswer is BUBBLE SORT, I think it's a bug in cs50 check.
How do you know?:
excellent performance on smaller or already sorted datasets due to its best-case scenario efficiency, it does not scale well with larger unsorted lists compared to merge sort.


My test results:

               SELECTION            MERGE                  BUBBLE
                 sort1              sort2                   sort3
random5000      0m0.065s           0m0.001s                0m0.064s
random50000     0m6.678s           0m0.001s                0m3.108s

reversed5000    0m0.079s           0m0.001s                0m0.047s
reversed50000   0m4.801s           0m0.001s                0m2.939s

sorted5000      0m0.014s           0m0.001s                0m0.001s
sorted50000     0m0.319s           0m0.001s                0m0.005s



